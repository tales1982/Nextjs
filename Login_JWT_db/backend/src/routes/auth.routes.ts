// src/routes/auth.routes.ts
/**
 * auth.routes.ts define as rotas de autenticaÃ§Ã£o da sua API usando o Express, 
 * de forma bem organizada e modular. Vou te explicar linha por linha:
 */
import { Router } from 'express'                                                               
import { login, register, profile } from '../controllers/auth.controller'                       
import { authenticateToken } from '../middlewares/auth.middleware' 

/////////////////////////////////////////////////////////////////////////////////////////////////////
//â†’ Importa o Router do Express, que permite criar um grupo de rotas separadas, como um mini-app.////
//â†’ Importa as funÃ§Ãµes login, register e profile do controller de autenticaÃ§Ã£o.                  ////
//â†’ Importa o middleware que verifica o token JWT para proteger rotas privadas, como /profile.   ////
/////////////////////////////////////////////////////////////////////////////////////////////////////

//=================================================================================================//
const router = Router();

router.post('/register', register)
router.post('/login', login)
router.get('/profile', authenticateToken, profile)

export default router;

//////////////////////////////////////////////////////////////////////////////////////////////////////
//const router = Router()                                                                           //
//â†’ Cria uma instÃ¢ncia de router. VocÃª vai usar ela para declarar rotas como /register, /login, etc.//
//==================================================================================================//
//router.post('/register', register)                                                                //                                                          
//â†’ Cria a rota POST /register que chama a funÃ§Ã£o register do controller.                           // 
//==================================================================================================//
//router.post('/login', login)                                                                      //
//â†’ Cria a rota POST /login que chama a funÃ§Ã£o login.                                               //
//ðŸ“¤ Usada para autenticar e retornar um token JWT.                                                 //
//==================================================================================================//
//router.get('/profile', authenticateToken, profile)                                                //
//â†’ Cria a rota GET /profile protegida com o middleware authenticateToken.                          //
//ðŸ“¥ Primeiro o middleware valida o token; se estiver OK, chama a funÃ§Ã£o profile.                   //
//////////////////////////////////////////////////////////////////////////////////////////////////////